package compuwork1;

import Clases.Departamento;
import Clases.Empleado;
import Clases.ReporteDesempeño;
import CompuWorkPresentacion.ventanaPrincipal;

import java.util.Scanner;
/**
 *
 * @author user
 */
public class CompuWork1 {

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        ventanaPrincipal ventana=new ventanaPrincipal();
        ventana.setVisible(true);

        Departamento.inicializarDepartamentos();
        Departamento.inicializarEmpleados();

        String rol = autenticarUsuario(scanner);

        if (rol.equals("ADMINISTRADOR")) {
            
            menuAdministrador(scanner);
        } else if (rol.equals("EMPLEADO")) {
            
            menuEmpleado(scanner);
        }
    }
  
    private static String autenticarUsuario(Scanner scanner) {
        String rol = "INVALIDO";

        while (rol.equals("INVALIDO")) {
            System.out.print("Ingrese su usuario: ");
            String usuario = scanner.nextLine();

            System.out.print("Ingrese su contraseña: ");
            String contraseña = scanner.nextLine();

            if (usuario.equals("Administrador") && contraseña.equals("123456")) {
                System.out.println("¡Acceso concedido! Bienvenido, Administrador.");
                return "ADMINISTRADOR";
            }

            for (Departamento dept : Departamento.getListaDepartamentos()) {
                for (Empleado emp : dept.getEmpleados()) {
                    if (emp.getNombre().equals(usuario) && emp.getContraseña().equals(contraseña)) {
                        System.out.println("¡Acceso concedido! Bienvenido, Empleado.");
                        return "EMPLEADO";
                    }
                }
            }

            System.out.println("Usuario o contraseña incorrectos. Intente nuevamente.");
        }

        return rol;
    }

    private static void menuAdministrador(Scanner scanner) {
        while (true) {
            System.out.println("\n--- Menú del Administrador ---");
            System.out.println("1. Agregar Empleado");
            System.out.println("2. Agregar Departamento");
            System.out.println("3. Generar Reporte de Desempeño");
            System.out.println("4. Mostrar Empleados por Departamento");
            System.out.println("5. Eliminar Empleado");
            System.out.println("6. Actualizar Empleado");
            System.out.println("7. Salir");
            System.out.print("Seleccione una opción: ");
            int opcion = scanner.nextInt();
            scanner.nextLine(); 

            switch (opcion) {
                case 1:
                    Empleado.agregarEmpleado();
                    break;
                case 2:
                    Departamento.agregarDepartamento();
                    break;
                case 3:
                    ReporteDesempeño.mostrarReporte();
                    break;
                case 4:
                    System.out.println("Empleados por Departamento:");
                    for (Departamento dept : Departamento.getListaDepartamentos()) {
                        System.out.println(dept.getNombre() + ": " + dept.contarEmpleados() + " empleados");
                        for (Empleado emp : dept.getEmpleados()) {
                            System.out.println("\t" + emp);
                        }
                    }
                    break;
                case 5:
                    Empleado.eliminarEmpleado();
                    break;
                case 6:
                    Empleado.actualizarEmpleado();
                    break;
                case 7:
                    System.out.println("Saliendo del sistema...");
                    return;
                default:
                    System.out.println("Opción no válida. Intente nuevamente.");
            }
        }
    }

    private static void menuEmpleado(Scanner scanner) {
        while (true) {
            System.out.println("\n--- Menú del Empleado ---");
            System.out.println("1. Ver mi Desempeño");
            System.out.println("2. Salir");
            System.out.print("Seleccione una opción: ");
            int opcion = scanner.nextInt();
            scanner.nextLine(); // Limpiar buffer

            switch (opcion) {
                case 1:
                    System.out.print("Ingrese su ID de Empleado para ver su desempeño: ");
                    int idEmpleado = scanner.nextInt();
                    scanner.nextLine(); // Limpiar buffer
                    ReporteDesempeño.verDesempeño(idEmpleado);
                    break;
                case 2:
                    System.out.println("Saliendo del sistema...");
                    return; // Termina el menú del empleado
                default:
                    System.out.println("Opción no válida. Intente nuevamente.");
            }
        }
    }
}
package compuwork1;

import Clases.Departamento;
import Clases.Empleado;
import Clases.ReporteDesempeño;
import CompuWorkPresentacion.ventanaPrincipal;

import java.util.Scanner;
/**
 *
 * @author user
 */
public class CompuWork1 {

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        ventanaPrincipal ventana=new ventanaPrincipal();
        ventana.setVisible(true);

        Departamento.inicializarDepartamentos();
        Departamento.inicializarEmpleados();

        String rol = autenticarUsuario(scanner);

        if (rol.equals("ADMINISTRADOR")) {
            
            menuAdministrador(scanner);
        } else if (rol.equals("EMPLEADO")) {
            
            menuEmpleado(scanner);
        }
    }
  
    private static String autenticarUsuario(Scanner scanner) {
        String rol = "INVALIDO";

        while (rol.equals("INVALIDO")) {
            System.out.print("Ingrese su usuario: ");
            String usuario = scanner.nextLine();

            System.out.print("Ingrese su contraseña: ");
            String contraseña = scanner.nextLine();

            if (usuario.equals("Administrador") && contraseña.equals("123456")) {
                System.out.println("¡Acceso concedido! Bienvenido, Administrador.");
                return "ADMINISTRADOR";
            }

            for (Departamento dept : Departamento.getListaDepartamentos()) {
                for (Empleado emp : dept.getEmpleados()) {
                    if (emp.getNombre().equals(usuario) && emp.getContraseña().equals(contraseña)) {
                        System.out.println("¡Acceso concedido! Bienvenido, Empleado.");
                        return "EMPLEADO";
                    }
                }
            }

            System.out.println("Usuario o contraseña incorrectos. Intente nuevamente.");
        }

        return rol;
    }

    private static void menuAdministrador(Scanner scanner) {
        while (true) {
            System.out.println("\n--- Menú del Administrador ---");
            System.out.println("1. Agregar Empleado");
            System.out.println("2. Agregar Departamento");
            System.out.println("3. Generar Reporte de Desempeño");
            System.out.println("4. Mostrar Empleados por Departamento");
            System.out.println("5. Eliminar Empleado");
            System.out.println("6. Actualizar Empleado");
            System.out.println("7. Salir");
            System.out.print("Seleccione una opción: ");
            int opcion = scanner.nextInt();
            scanner.nextLine(); 

            switch (opcion) {
                case 1:
                    Empleado.agregarEmpleado();
                    break;
                case 2:
                    Departamento.agregarDepartamento();
                    break;
                case 3:
                    ReporteDesempeño.mostrarReporte();
                    break;
                case 4:
                    System.out.println("Empleados por Departamento:");
                    for (Departamento dept : Departamento.getListaDepartamentos()) {
                        System.out.println(dept.getNombre() + ": " + dept.contarEmpleados() + " empleados");
                        for (Empleado emp : dept.getEmpleados()) {
                            System.out.println("\t" + emp);
                        }
                    }
                    break;
                case 5:
                    Empleado.eliminarEmpleado();
                    break;
                case 6:
                    Empleado.actualizarEmpleado();
                    break;
                case 7:
                    System.out.println("Saliendo del sistema...");
                    return;
                default:
                    System.out.println("Opción no válida. Intente nuevamente.");
            }
        }
    }

    private static void menuEmpleado(Scanner scanner) {
        while (true) {
            System.out.println("\n--- Menú del Empleado ---");
            System.out.println("1. Ver mi Desempeño");
            System.out.println("2. Salir");
            System.out.print("Seleccione una opción: ");
            int opcion = scanner.nextInt();
            scanner.nextLine(); // Limpiar buffer

            switch (opcion) {
                case 1:
                    System.out.print("Ingrese su ID de Empleado para ver su desempeño: ");
                    int idEmpleado = scanner.nextInt();
                    scanner.nextLine(); // Limpiar buffer
                    ReporteDesempeño.verDesempeño(idEmpleado);
                    break;
                case 2:
                    System.out.println("Saliendo del sistema...");
                    return; // Termina el menú del empleado
                default:
                    System.out.println("Opción no válida. Intente nuevamente.");
            }
        }
    }
}
